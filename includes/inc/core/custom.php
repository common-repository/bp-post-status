<?php/** * WP Statuses Custom. * * @package bp-post-status * * @since 1.0.0 */// Exit if accessed directly.defined( 'ABSPATH' ) || exit;/** * Register a Public status so that it will be in the loop. * * We'll use the_content() to filter the content's display. * * @since 1.0.0 */function bp_statuses_register_members_restricted() {	register_post_status( 'restricted', array(		'label'                     => esc_attr_x( 'Restricted to group members', 'post status', 'bp-post-status' ),		'public'                    => true,		'label_count'               => _n_noop( 'Restricted to group members <span class="count">(%s)</span>', 'Restricted to group members <span class="count">(%s)</span>', 'bp-post-status' ),		'post_type'                 => array( 'page' ), // Just pages for this example :)		'show_in_admin_all_list'    => true,		'show_in_admin_status_list' => true,		'show_in_metabox_dropdown'  => true,		'show_in_inline_dropdown'   => true,		'labels'                    => array(			'metabox_submit'   => esc_attr__( 'Save', 'bp-post-status' ),			'inline_dropdown'  => esc_attr__( 'Restricted', 'bp-post-status' ),		),		'dashicon'                  => 'dashicons-groups',	) );}add_action( 'init', 'bp_statuses_register_members_restricted', 11 );/** * Filter the content for the "restricted" pages. * * @since 1.0.0 * * @param string $content The content. */function bp_statuses_restrict_content( $content = '' ) {	$post = get_post();	if ( 'page' !== $post->post_type ) {		return $content;	}	if ( 'restricted' !== $post->post_status || is_user_logged_in() ) {		return $content;	}	return sprintf( esc_attr__( 'Please %s to view this content.', 'bp-post-status' ), sprintf(		'<a href="%1$s">%2$s</a>',		esc_url( wp_login_url( get_permalink( $post->ID ) ) ),		esc_html__( 'log in', 'bp-post-status' )	) );}add_filter( 'the_content', 'bp_statuses_restrict_content', 1, 1 );/** * Add an example of custom status for the Post's post type. * * @since 1.1.0 */function bp_statuses_register_archived_post_status() {	register_post_status( 'archive', array(		'label'                       => esc_attr__( 'Archive', 'bp-post-status' ),		'label_count'                 => _n_noop( 'Archived <span class="count">(%s)</span>', 'Archived <span class="count">(%s)</span>', 'bp-post-status' ),		'public'                      => false,		'show_in_admin_all_list'      => false,		'show_in_admin_status_list'   => true,		'post_type'                   => array( 'post' ), // Only for posts!		'show_in_metabox_dropdown'    => true,		'show_in_inline_dropdown'     => true,		'show_in_press_this_dropdown' => true,		'labels'                      => array(			'metabox_dropdown'    => esc_attr__( 'Archived', 'bp-post-status' ),			'metabox_submit'      => esc_attr__( 'Archive', 'bp-post-status' ),			'metabox_save_on'     => esc_attr__( 'Archive on:', 'bp-post-status' ),			/* translators: Post date information. 1: Date on which the post is to be archived */			'metabox_save_date'   => esc_attr__( 'Archive on: <b>%1$s</b>', 'bp-post-status' ),			'metabox_saved_on'    => esc_attr__( 'Archived on:', 'bp-post-status' ),			/* translators: Post date information. 1: Date on which the post was archived */			'metabox_saved_date'  => esc_attr__( 'Archived on: <b>%1$s</b>', 'bp-post-status' ),			'metabox_save_now'    => esc_attr__( 'Archive <b>now</b>', 'bp-post-status' ),			'inline_dropdown'     => esc_attr__( 'Archived', 'bp-post-status' ),			'press_this_dropdown' => esc_attr__( 'Add to archives', 'bp-post-status' ),		),		'dashicon'                    => 'dashicons-archive',	) );}add_action( 'init', 'bp_statuses_register_archived_post_status', 11 );